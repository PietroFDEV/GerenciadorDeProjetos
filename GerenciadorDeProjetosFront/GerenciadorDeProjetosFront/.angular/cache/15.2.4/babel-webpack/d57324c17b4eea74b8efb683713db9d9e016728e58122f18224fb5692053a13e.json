{"ast":null,"code":"import { ApiGerenciadorService } from '../api-gerenciador.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../api-gerenciador.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nconst _c0 = function () {\n  return {\n    standalone: true\n  };\n};\nfunction LoginComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"label\", 3);\n    i0.ɵɵtext(3, \"Email address\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"input\", 4);\n    i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_div_0_Template_input_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.login = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 2)(6, \"label\", 5);\n    i0.ɵɵtext(7, \"Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"input\", 6);\n    i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_div_0_Template_input_ngModelChange_8_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.pass = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function LoginComponent_div_0_Template_button_click_9_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.Login());\n    });\n    i0.ɵɵtext(10, \"Submit\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.login)(\"ngModelOptions\", i0.ɵɵpureFunction0(4, _c0));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.pass)(\"ngModelOptions\", i0.ɵɵpureFunction0(5, _c0));\n  }\n}\nexport class LoginComponent {\n  constructor(service) {\n    this.service = service;\n    this.mostrarLogin = true;\n    this.login = \"\";\n    this.email = \"\";\n    this.pass = \"\";\n  }\n  ngOnInit() {\n    this.login = this.loginUser.login;\n    this.pass = this.loginUser.pass;\n  }\n  Login() {\n    debugger;\n    var nameLogin = this.filtroLogin.login;\n    var senhaLogin = this.filtroLogin.pass;\n    console.log(nameLogin, senhaLogin);\n    this.service.existsUser(nameLogin, senhaLogin).subscribe(result => {\n      if (result) {\n        this.mostrarLogin = false;\n      }\n    });\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.ApiGerenciadorService));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  inputs: {\n    loginUser: \"loginUser\"\n  },\n  features: [i0.ɵɵProvidersFeature([ApiGerenciadorService])],\n  decls: 1,\n  vars: 1,\n  consts: [[\"class\", \"container mt-5\", 4, \"ngIf\"], [1, \"container\", \"mt-5\"], [1, \"form-group\"], [\"for\", \"login\"], [\"type\", \"email\", \"name\", \"login\", \"id\", \"login\", \"placeholder\", \"Enter email\", 1, \"form-control\", 3, \"ngModel\", \"ngModelOptions\", \"ngModelChange\"], [\"for\", \"pass\"], [\"type\", \"password\", \"name\", \"pass\", \"id\", \"pass\", \"placeholder\", \"Password\", 1, \"form-control\", 3, \"ngModel\", \"ngModelOptions\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"mt-2\", 3, \"click\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, LoginComponent_div_0_Template, 11, 6, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.mostrarLogin);\n    }\n  },\n  dependencies: [i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,qBAAqB,QAAQ,4BAA4B;;;;;;;;;;;;;ICelEC,8BAAiD;IAE1BA,6BAAa;IAAAA,iBAAQ;IACxCA,gCAAqJ;IAA1DA;MAAAA;MAAA;MAAA;IAAA,EAAmB;IAA9GA,iBAAqJ;IAGvJA,8BAAwB;IACJA,wBAAQ;IAAAA,iBAAQ;IAClCA,gCAAmJ;IAAzDA;MAAAA;MAAA;MAAA;IAAA,EAAkB;IAA5GA,iBAAmJ;IAErJA,iCAAqE;IAA/CA;MAAAA;MAAA;MAAA,OAASA,6BAAO;IAAA,EAAC;IAA8BA,uBAAM;IAAAA,iBAAS;;;;IAPSA,eAAmB;IAAnBA,sCAAmB;IAKpBA,eAAkB;IAAlBA,qCAAkB;;;ADZhH,OAAM,MAAOC,cAAc;EAIzBC,YAAoBC,OAA6B;IAA7B,YAAO,GAAPA,OAAO;IAG3B,iBAAY,GAAW,IAAI;IAI3B,UAAK,GAAW,EAAE;IAClB,UAAK,GAAW,EAAE;IAClB,SAAI,GAAW,EAAE;EATmC;EAWpDC,QAAQ;IACN,IAAI,CAACC,KAAK,GAAG,IAAI,CAACC,SAAS,CAACD,KAAK;IACjC,IAAI,CAACE,IAAI,GAAG,IAAI,CAACD,SAAS,CAACC,IAAI;EACjC;EAEOC,KAAK;IACV;IACA,IAAIC,SAAS,GAAG,IAAI,CAACC,WAAW,CAACL,KAAK;IACtC,IAAIM,UAAU,GAAG,IAAI,CAACD,WAAW,CAACH,IAAI;IACtCK,OAAO,CAACC,GAAG,CAACJ,SAAS,EAAEE,UAAU,CAAC;IAClC,IAAI,CAACR,OAAO,CAACW,UAAU,CAACL,SAAS,EAAEE,UAAU,CAAC,CAC3CI,SAAS,CAACC,MAAM,IAAG;MAClB,IAAGA,MAAM,EAAE;QACT,IAAI,CAACC,YAAY,GAAG,KAAK;;IAE7B,CAAC,CAAC;EACN;;AA/BWhB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAiB;EAAAC;IAAAb;EAAA;EAAAc,iCAFd,CAACrB,qBAAqB,CAAC;EAAAsB;EAAAC;EAAAC;EAAAC;IAAA;MCMpCxB,gEAWM;;;MAXuBA,uCAAkB","names":["ApiGerenciadorService","i0","LoginComponent","constructor","service","ngOnInit","login","loginUser","pass","Login","nameLogin","filtroLogin","senhaLogin","console","log","existsUser","subscribe","result","mostrarLogin","selectors","inputs","features","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\Gamer\\Documents\\GitHub\\GerenciadorDeProjetos\\GerenciadorDeProjetosFront\\GerenciadorDeProjetosFront\\src\\app\\login\\login.component.ts","C:\\Users\\Gamer\\Documents\\GitHub\\GerenciadorDeProjetos\\GerenciadorDeProjetosFront\\GerenciadorDeProjetosFront\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { ApiGerenciadorService } from '../api-gerenciador.service';\nimport { Observable } from 'rxjs';\nimport { ResourceLoader } from '@angular/compiler';\nimport { loginModel } from 'src/model/loginModel';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n  providers: [ApiGerenciadorService]\n})\nexport class LoginComponent implements OnInit {\n\n  loginList$!:Observable<any[]>;\n\n  constructor(private service:ApiGerenciadorService) {}\n\n\n  mostrarLogin:boolean = true;\n  filtroLogin!:loginModel;\n\n  @Input() loginUser:any;\n  login: string = \"\";\n  email: string = \"\";\n  pass: string = \"\";\n\n  ngOnInit(): void {\n    this.login = this.loginUser.login;\n    this.pass = this.loginUser.pass;\n  }\n\n  public Login() {\n    debugger\n    var nameLogin = this.filtroLogin.login;\n    var senhaLogin = this.filtroLogin.pass;\n    console.log(nameLogin, senhaLogin);\n    this.service.existsUser(nameLogin, senhaLogin)\n      .subscribe(result => {\n        if(result) {\n          this.mostrarLogin = false;\n        }\n      })\n  }\n  \n}\n","<!-- <table class=\"table table-striped\">\n    <thead>\n        <th>Id</th>\n        <th>UserLogin</th>\n        <th>UserPass</th>\n        <th>Email</th>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let user of loginList$|async\">\n            <td>{{user.id}}</td>\n            <td>{{user.userLogin}}</td>\n            <td>{{user.userPass}}</td>\n            <td>{{user.email}}</td>\n        </tr>\n    </tbody>\n</table> -->\n<div class=\"container mt-5\" *ngIf=\"mostrarLogin\">\n  <div class=\"form-group\">\n    <label for=\"login\">Email address</label>\n    <input type=\"email\" class=\"form-control\" name=\"login\" id=\"login\" placeholder=\"Enter email\" [(ngModel)]=\"login\" [ngModelOptions]=\"{standalone: true}\">\n    \n</div>\n  <div class=\"form-group\">\n    <label for=\"pass\">Password</label>\n    <input type=\"password\" class=\"form-control\" name=\"pass\" id=\"pass\"  placeholder=\"Password\" [(ngModel)]=\"pass\" [ngModelOptions]=\"{standalone: true}\">\n  </div>\n  <button type=\"submit\" (click)=\"Login()\" class=\"btn btn-primary mt-2\">Submit</button>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}