{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiGerenciadorService {\n  constructor(http) {\n    this.http = http;\n    this.gerenciadorAPIUrl = \"https://localhost:7157/api\";\n  }\n  //LOGIN USUARIO CRUD\n  getUser() {\n    return this.http.get(this.gerenciadorAPIUrl + '/LoginUsers');\n  }\n  addUser(data) {\n    return this.http.post(this.gerenciadorAPIUrl + '/LoginUsers', data);\n  }\n  updateUser(id, data) {\n    return this.http.put(this.gerenciadorAPIUrl + `/LoginUsers/${id}`, data);\n  }\n  deleteUser(id) {\n    return this.http.delete(this.gerenciadorAPIUrl + `/LoginUsers/${id}`);\n  }\n  existsUser(string) {\n    return this.http.get(this.gerenciadorAPIUrl + `/LoginUsers/${login}/${pass}`);\n  }\n  //LISTA CRUD\n  getList() {\n    return this.http.get(this.gerenciadorAPIUrl + '/Lists');\n  }\n  addList(data) {\n    return this.http.post(this.gerenciadorAPIUrl + '/Lists', data);\n  }\n  updateList(id, data) {\n    return this.http.put(this.gerenciadorAPIUrl + `/Lists/${id}`, data);\n  }\n  deleteList(id) {\n    return this.http.delete(this.gerenciadorAPIUrl + `/Lists/${id}`);\n  }\n  //CARDS CRUD\n  getCards() {\n    return this.http.get(this.gerenciadorAPIUrl + '/CardList');\n  }\n  addCard(data) {\n    return this.http.post(this.gerenciadorAPIUrl + '/CardList', data);\n  }\n  updaCard(id, data) {\n    return this.http.put(this.gerenciadorAPIUrl + `/CardList/${id}`, data);\n  }\n  deleteCard(id) {\n    return this.http.delete(this.gerenciadorAPIUrl + `/CardList/${id}`);\n  }\n}\nApiGerenciadorService.ɵfac = function ApiGerenciadorService_Factory(t) {\n  return new (t || ApiGerenciadorService)(i0.ɵɵinject(i1.HttpClient));\n};\nApiGerenciadorService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ApiGerenciadorService,\n  factory: ApiGerenciadorService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,qBAAqB;EAIhCC,YAAoBC,IAAe;IAAf,SAAI,GAAJA,IAAI;IAFf,sBAAiB,GAAG,4BAA4B;EAElB;EAEvC;EACAC,OAAO;IACL,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAM,IAAI,CAACC,iBAAiB,GAAG,aAAa,CAAC;EACnE;EAEAC,OAAO,CAACC,IAAQ;IACd,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAC,IAAI,CAACH,iBAAiB,GAAG,aAAa,EAAEE,IAAI,CAAC;EACrE;EAEAE,UAAU,CAACC,EAAS,EAAEH,IAAQ;IAC5B,OAAO,IAAI,CAACL,IAAI,CAACS,GAAG,CAAC,IAAI,CAACN,iBAAiB,GAAG,eAAeK,EAAE,EAAE,EAAEH,IAAI,CAAC;EAC1E;EAEAK,UAAU,CAACF,EAAS;IAClB,OAAO,IAAI,CAACR,IAAI,CAACW,MAAM,CAAC,IAAI,CAACR,iBAAiB,GAAG,eAAeK,EAAE,EAAE,CAAC;EACvE;EAEAI,UAAU,CAACC,MAAM;IACf,OAAO,IAAI,CAACb,IAAI,CAACE,GAAG,CAAU,IAAI,CAACC,iBAAiB,GAAG,eAAeW,KAAK,IAAIC,IAAI,EAAE,CAAC;EACxF;EAEA;EACAC,OAAO;IACL,OAAO,IAAI,CAAChB,IAAI,CAACE,GAAG,CAAM,IAAI,CAACC,iBAAiB,GAAG,QAAQ,CAAC;EAC9D;EAEAc,OAAO,CAACZ,IAAQ;IACd,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAC,IAAI,CAACH,iBAAiB,GAAG,QAAQ,EAAEE,IAAI,CAAC;EAChE;EAEAa,UAAU,CAACV,EAAS,EAAEH,IAAQ;IAC5B,OAAO,IAAI,CAACL,IAAI,CAACS,GAAG,CAAC,IAAI,CAACN,iBAAiB,GAAG,UAAUK,EAAE,EAAE,EAAEH,IAAI,CAAC;EACrE;EAEAc,UAAU,CAACX,EAAS;IAClB,OAAO,IAAI,CAACR,IAAI,CAACW,MAAM,CAAC,IAAI,CAACR,iBAAiB,GAAG,UAAUK,EAAE,EAAE,CAAC;EAClE;EAEE;EACAY,QAAQ;IACN,OAAO,IAAI,CAACpB,IAAI,CAACE,GAAG,CAAM,IAAI,CAACC,iBAAiB,GAAG,WAAW,CAAC;EACjE;EAEAkB,OAAO,CAAChB,IAAQ;IACd,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAC,IAAI,CAACH,iBAAiB,GAAG,WAAW,EAAEE,IAAI,CAAC;EACnE;EAEAiB,QAAQ,CAACd,EAAS,EAAEH,IAAQ;IAC1B,OAAO,IAAI,CAACL,IAAI,CAACS,GAAG,CAAC,IAAI,CAACN,iBAAiB,GAAG,aAAaK,EAAE,EAAE,EAAEH,IAAI,CAAC;EACxE;EAEAkB,UAAU,CAACf,EAAS;IAClB,OAAO,IAAI,CAACR,IAAI,CAACW,MAAM,CAAC,IAAI,CAACR,iBAAiB,GAAG,aAAaK,EAAE,EAAE,CAAC;EACrE;;AA3DSV,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;SAArBA,qBAAqB;EAAA0B,SAArB1B,qBAAqB;EAAA2B,YAFpB;AAAM","names":["ApiGerenciadorService","constructor","http","getUser","get","gerenciadorAPIUrl","addUser","data","post","updateUser","id","put","deleteUser","delete","existsUser","string","login","pass","getList","addList","updateList","deleteList","getCards","addCard","updaCard","deleteCard","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Gamer\\Documents\\GitHub\\GerenciadorDeProjetos\\GerenciadorDeProjetosFront\\GerenciadorDeProjetosFront\\src\\app\\api-gerenciador.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiGerenciadorService {\n\n  readonly gerenciadorAPIUrl = \"https://localhost:7157/api\";\n\n  constructor(private http:HttpClient) { }\n\n  //LOGIN USUARIO CRUD\n  getUser():Observable<any[]> {\n    return this.http.get<any>(this.gerenciadorAPIUrl + '/LoginUsers');\n  }\n\n  addUser(data:any) {\n    return this.http.post(this.gerenciadorAPIUrl + '/LoginUsers', data)\n  }\n\n  updateUser(id:number, data:any) {\n    return this.http.put(this.gerenciadorAPIUrl + `/LoginUsers/${id}`, data)\n  }\n\n  deleteUser(id:number) {\n    return this.http.delete(this.gerenciadorAPIUrl + `/LoginUsers/${id}`)\n  }\n\n  existsUser(string):Observable<boolean> {\n    return this.http.get<boolean>(this.gerenciadorAPIUrl + `/LoginUsers/${login}/${pass}`)\n  }\n\n  //LISTA CRUD\n  getList():Observable<any[]> {\n    return this.http.get<any>(this.gerenciadorAPIUrl + '/Lists');\n  }\n\n  addList(data:any) {\n    return this.http.post(this.gerenciadorAPIUrl + '/Lists', data)\n  }\n\n  updateList(id:number, data:any) {\n    return this.http.put(this.gerenciadorAPIUrl + `/Lists/${id}`, data)\n  }\n\n  deleteList(id:number) {\n    return this.http.delete(this.gerenciadorAPIUrl + `/Lists/${id}`)\n  }\n\n    //CARDS CRUD\n    getCards():Observable<any[]> {\n      return this.http.get<any>(this.gerenciadorAPIUrl + '/CardList');\n    }\n  \n    addCard(data:any) {\n      return this.http.post(this.gerenciadorAPIUrl + '/CardList', data)\n    }\n  \n    updaCard(id:number, data:any) {\n      return this.http.put(this.gerenciadorAPIUrl + `/CardList/${id}`, data)\n    }\n  \n    deleteCard(id:number) {\n      return this.http.delete(this.gerenciadorAPIUrl + `/CardList/${id}`)\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}